
spring:
  shardingsphere:

    datasource:
      names: ds0,ds1,ds2
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://10.6.136.57:21500/lottery_0?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://10.6.136.57:21500/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://10.6.136.57:21500/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
    sharding:
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
      tables:
        user:
          actual-data-nodes: ds$->{0..1}.user_$->{0..2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: user_$->{id%3}
    # *** 数据库分库分表配置 start
    masterslave:
      # 查询时的负载均衡算法，目前有2种算法，round_robin（轮询）和random（随机），
      # 算法接口是io.shardingjdbc.core.api.algorithm.masterslave.MasterSlaveLoadBalanceAlgorithm。
      # 实现类有RandomMasterSlaveLoadBalanceAlgorithm 和 RoundRobinMasterSlaveLoadBalanceAlgorithm。
      load-balance-algorithm-type: round_robin
      name: dataSource
      # 主数据源名称
      master-data-source-name: ds0,ds1
      # 从数据源名称，多个用逗号隔开
      slave-data-source-names: ds2
    # *** 数据库分库分表配置 end

    props:
      sql:
        show:
          true
      check:
        table:
          metadata: true
          # 是否在启动时检查分表元数据一致性
          enabled: true
      query:
        with:
          cipher:
            column: true

server:
  port: 9001
