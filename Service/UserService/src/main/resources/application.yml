
spring:
  application:
    name: uss
  shardingsphere:
    datasource:
      names: m0,m1,s0,s1
      m0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/lottery_0?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
#        url: jdbc:mysql://10.6.136.57:21500/lottery_0?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
#        url: jdbc:mysql://10.6.136.57:21500/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      s0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/lottery_2?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
 #       url: jdbc:mysql://10.6.136.57:21500/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      s1:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/lottery_3?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        #       url: jdbc:mysql://10.6.136.57:21500/lottery_1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
    sharding:
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
      tables:
        user:
          actual-data-nodes: ds$->{0..1}.user_$->{0..2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: user_$->{id%3}
      master-slave-rules:
        ds0:
          master-data-source-name: m0
          slave-data-source-names: s0
        ds1:
          master-data-source-name: m1
          slave-data-source-names: s1
    # *** 数据库分库分表配置 start

    props:
      sql:
        show:
          true
      check:
        table:
          metadata: true
          # 是否在启动时检查分表元数据一致性
          enabled: true
      query:
        with:
          cipher:
            column: true

server:
  port: 9001

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    isOnOff: on
    topic: uss
    send-message-timeout: 10000
    group: ${spring.application.name}
    #消息最大长度 默认1024*4(4M)
    maxMessageSize: 4096
    #发送消息超时时间,默认3000
    sendMsgTimeout: 3000
    #发送消息失败重试次数，默认2
    retryTimesWhenSendFailed: 2
    tag: tag1
  ###consumer
  ##该应用是否启用消费者
  consumer:
    topic: uss
    isOnOff: on
    group: ${spring.application.name}
    consumeThreadMin: 20
    consumeThreadMax: 64
    tag: tag1
    #设置一次消费消息的条数，默认为1条
    consumeMessageBatchMaxSize: 1
    instance: instance
